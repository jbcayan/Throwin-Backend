name: Django CI

on:
  push:
    branches:
      - main  # Adjust to your default branch if different
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13
        env:
          POSTGRES_DB: your_db_name
          POSTGRES_USER: your_db_user
          POSTGRES_PASSWORD: your_db_password
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U your_db_user"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        shell: bash
        # Capture any errors in the installation process
        continue-on-error: false

      - name: Run migrations
        env:
          DATABASE_URL: postgres://your_db_user:your_db_password@localhost/your_db_name
        run: |
          python manage.py migrate || { echo "Migration failed"; exit 1; }
          python throwin/manage.py migrate || { echo "Migration failed"; exit 1; }
        shell: bash

      - name: Run tests
        env:
          DATABASE_URL: postgres://your_db_user:your_db_password@localhost/your_db_name
        run: |
          python manage.py test || { echo "Tests failed"; exit 1; }
          python throwin/manage.py test || { echo "Tests failed"; exit 1; }
        shell: bash