# Generated by Django 5.1.2 on 2025-01-07 08:17

import core.utils
import django.db.models.deletion
import uuid
import versatileimagefield.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('deleted', 'Deleted'), ('pending', 'Pending')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('logo', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to=core.utils.get_restaurant_logo_file_prefix, verbose_name='restaurant logo')),
                ('banner', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to=core.utils.get_restaurant_banner_file_prefix, verbose_name='restaurant banner')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created Person')),
                ('restaurant_owner', models.ForeignKey(help_text='The owner of the restaurant', on_delete=django.db.models.deletion.PROTECT, related_name='restaurants', to=settings.AUTH_USER_MODEL)),
                ('sales_agent', models.ForeignKey(blank=True, help_text='The sales agent of the restaurant', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sales_agent_restaurants', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated Person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('deleted', 'Deleted'), ('pending', 'Pending')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, db_index=True, max_length=20, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('logo', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to=core.utils.get_store_logo_file_prefix, verbose_name='Store logo')),
                ('banner', versatileimagefield.fields.VersatileImageField(blank=True, null=True, upload_to=core.utils.get_store_banner_file_prefix, verbose_name='Store Banner')),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created Person')),
                ('restaurant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stores', to='store.restaurant')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated Person')),
            ],
            options={
                'verbose_name': 'Store',
                'verbose_name_plural': 'Stores',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='RestaurantUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('deleted', 'Deleted'), ('pending', 'Pending')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('super_admin', 'Super Admin'), ('fc_admin', 'FC Admin'), ('glow_admin', 'Glow Admin'), ('sales_agent', 'Sales Agent'), ('restaurant_staff', 'Restaurant Staff'), ('restaurant_owner', 'Restaurant Owner'), ('consumer', 'Consumer'), ('undefined', 'Undefined')], default='undefined', help_text='The role of the user for the associated restaurant.', max_length=50)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created Person')),
                ('restaurant', models.ForeignKey(help_text='The restaurant this user is assigned to. Null for global roles (not applicable).', on_delete=django.db.models.deletion.CASCADE, related_name='restaurant_users', to='store.restaurant')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated Person')),
                ('user', models.ForeignKey(help_text='The user associated with the restaurant.', on_delete=django.db.models.deletion.CASCADE, related_name='user_restaurants', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'constraints': [models.UniqueConstraint(condition=models.Q(('role__in', ['restaurant_staff', 'restaurant_owner'])), fields=('user', 'restaurant'), name='unique_user_restaurant_role')],
            },
        ),
        migrations.CreateModel(
            name='StoreUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('deleted', 'Deleted'), ('pending', 'Pending')], default='active', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('super_admin', 'Super Admin'), ('fc_admin', 'FC Admin'), ('glow_admin', 'Glow Admin'), ('sales_agent', 'Sales Agent'), ('restaurant_staff', 'Restaurant Staff'), ('restaurant_owner', 'Restaurant Owner'), ('consumer', 'Consumer'), ('undefined', 'Undefined')], default='undefined', help_text='The role of the user in the store.', max_length=50)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_by', to=settings.AUTH_USER_MODEL, verbose_name='Created Person')),
                ('store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='store_users', to='store.store')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_by', to=settings.AUTH_USER_MODEL, verbose_name='Updated Person')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_stores', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('user', 'store'), name='unique_user_store_role', violation_error_message='A user can only have one role per store.')],
                'unique_together': {('store', 'user')},
            },
        ),
    ]
